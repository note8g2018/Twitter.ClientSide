plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    // My Library
    // Realm + Hilt
    id 'kotlin-kapt'
    // Hilt
    id 'dagger.hilt.android.plugin'
    // Realm
    id 'io.realm.kotlin'
    // Serialization
    //id 'org.jetbrains.kotlin.jvm' version '1.6.10'
    //id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.10'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.20'
}

android {
    namespace 'com.coolme.me.twitterclientside'
    compileSdkPreview 'Tiramisu'

    defaultConfig {
        applicationId 'com.coolme.me.twitterclientside'
        minSdk 28
        targetSdk 32
        //targetSdkPreview 'Tiramisu'
        versionCode 1
        versionName '1.0'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_ui_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    buildToolsVersion '33.0.0 rc2'
    ndkVersion '25.0.8221429 rc2'
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0-alpha02'
    //implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.0-beta01'
    implementation 'androidx.activity:activity-compose:1.6.0-alpha01'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation "androidx.compose.material:material:$compose_ui_version"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4-alpha05'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0-alpha05'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"

    //***********************************************************
    // My Library

    //***********************************************************
    // ViewModel
    def lifecycle_version = '2.5.0-beta01'
    def arch_version = "2.1.0"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
    //kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"

    //**********************************************************************

    // Additional icons
    //implementation "androidx.compose.material.icons:$compose_ui_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_ui_version"

    //*********************************************************************
    // Compose navigation
    def nav_version = '2.5.0-beta01'

    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:$nav_version"

    //********************************************************

    // Splash Screen
    implementation 'androidx.core:core-splashscreen:1.0.0-beta02'

    //************************************************************
    // Serialization + JSON
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2'
    //************************************************************************
    // Kotlin DateTime
    implementation 'org.jetbrains.kotlinx:kotlinx-datetime:0.3.2'
    //**************************************************************
    // Ktor
    def ktor_version = "2.0.0"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    //implementation "io.ktor:ktor-client-cio:$ktor_version"
    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation "io.ktor:ktor-client-content-negotiation:$ktor_version"
    implementation "io.ktor:ktor-serialization-kotlinx-json:$ktor_version"
    //implementation "io.ktor:ktor-client-serialization:$ktor_version"
    implementation "io.ktor:ktor-client-logging:$ktor_version"
    //implementation "io.ktor:ktor-client-websockets:$ktor_version"
    //implementation "io.ktor:ktor-client-auth:$ktor_version"
    //implementation "io.ktor:ktor-client-jackson:$ktor_version"
    //implementation "io.ktor:ktor-client-gson:$ktor_version"
    //implementation "io.ktor:ktor-client-java:$ktor_version"
    //implementation "io.ktor:ktor-client-okhttp:$ktor_version"
    //implementation "io.ktor:ktor-client-jetty:$ktor_version"
    //implementation "io.ktor:ktor-client-js:$ktor_version"
    //implementation "io.ktor:ktor-client-curl:$ktor_version"
    //implementation "io.ktor:ktor-client-ios:$ktor_version"
    //implementation "ch.qos.logback:logback:1.2.11"
    implementation 'ch.qos.logback:logback-classic:1.3.0-alpha14'

    //**************************************************************

    // Hilt
    def hilt_version = "2.41"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    // For instrumentation tests
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$hilt_version"
    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-compiler:$hilt_version"

    // Hilt + Compose
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    // WorkManager
    def work_version = "2.8.0-alpha02"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "androidx.work:work-multiprocess:$work_version"
    // Hilt + WorkManager
    implementation 'androidx.hilt:hilt-work:1.0.0'
    kapt 'androidx.hilt:hilt-compiler:1.0.0' // When using Kotlin.

    //****************************************************************
    // For Realm SDK
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'
    implementation 'io.realm.kotlin:library-base:0.10.2'

    //********************************************************************

    // CameraX core library using the camera2 implementation
    def camerax_version = "1.1.0-beta03"
    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to additionally use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    // If you want to additionally use the CameraX VideoCapture library
    implementation "androidx.camera:camera-video:${camerax_version}"
    // If you want to additionally use the CameraX View class
    implementation "androidx.camera:camera-view:${camerax_version}"
    // If you want to additionally use the CameraX Extensions library
    implementation "androidx.camera:camera-extensions:${camerax_version}"


    //**********************************************************************
    // Coil for Image
    //implementation 'io.coil-kt:coil:2.0.0-rc03'
    implementation 'io.coil-kt:coil-compose:2.0.0-rc03'

    //**********************************************************
    // Accompanist - Jetpack Compose Permissions
    implementation "com.google.accompanist:accompanist-permissions:0.24.7-alpha"
}

kapt {
    correctErrorTypes true
}