plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    // My Library
    // Realm + Hilt
    id 'kotlin-kapt'
    // Hilt
    id 'dagger.hilt.android.plugin'
    // Realm
    id 'io.realm.kotlin'
    // Serialization
    //id 'org.jetbrains.kotlin.jvm' version '1.6.10'
    //id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.10'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.20'
}

android {
    namespace 'com.coolme.me.twitterclientside'
    compileSdkPreview 'Tiramisu'

    defaultConfig {
        applicationId 'com.coolme.me.twitterclientside'
        minSdk 28
        targetSdk 32
        //targetSdkPreview 'Tiramisu'
        versionCode 1
        versionName '1.0'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_ui_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    buildToolsVersion '33.0.0 rc2'
    ndkVersion '25.0.8221429 rc2'
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0-alpha02'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.0-alpha06'
    implementation 'androidx.activity:activity-compose:1.6.0-alpha01'
    implementation 'androidx.compose.ui:ui:1.2.0-alpha07'
    implementation 'androidx.compose.ui:ui-tooling-preview:1.2.0-alpha07'
    implementation 'androidx.compose.material:material:1.2.0-alpha07'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4-alpha05'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0-alpha05'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.2.0-alpha07'
    debugImplementation 'androidx.compose.ui:ui-tooling:1.2.0-alpha07'
    debugImplementation 'androidx.compose.ui:ui-test-manifest:1.2.0-alpha07'

    // My Library
    // ViewModel utilities for Compose
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.0-alpha06'
    // Additional icons
    implementation 'androidx.compose.material:material-icons-extended:1.2.0-alpha07'

    // Compose navigation
    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:2.5.0-alpha04"
    implementation "androidx.navigation:navigation-ui-ktx:2.5.0-alpha04"
    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:2.5.0-alpha04"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:2.5.0-alpha04"
    // Jetpack Compose Integration
    implementation 'androidx.navigation:navigation-compose:2.5.0-alpha04'

    // Splash Screen
    implementation 'androidx.core:core-splashscreen:1.0.0-beta02'
    // Serialization + JSON
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2'
    // Kotlin DateTime
    implementation 'org.jetbrains.kotlinx:kotlinx-datetime:0.3.2'
    // Ktor
    implementation 'io.ktor:ktor-client-core:2.0.0'
    //implementation 'io.ktor:ktor-client-cio:1.6.7'
    implementation 'io.ktor:ktor-client-android:2.0.0'
    implementation 'io.ktor:ktor-client-content-negotiation:2.0.0'
    implementation 'io.ktor:ktor-serialization-kotlinx-json:2.0.0'
    //implementation 'io.ktor:ktor-client-serialization:1.6.7'
    implementation 'io.ktor:ktor-client-logging:2.0.0'
    //implementation "io.ktor:ktor-client-websockets:$ktor_version"
    //implementation "io.ktor:ktor-client-auth:$ktor_version"
    //implementation "io.ktor:ktor-client-jackson:$ktor_version"
    //implementation "io.ktor:ktor-client-gson:$ktor_version"
    //implementation "io.ktor:ktor-client-java:$ktor_version"
    //implementation "io.ktor:ktor-client-okhttp:$ktor_version"
    //implementation "io.ktor:ktor-client-jetty:$ktor_version"
    //implementation "io.ktor:ktor-client-js:$ktor_version"
    //implementation "io.ktor:ktor-client-curl:$ktor_version"
    //implementation "io.ktor:ktor-client-ios:$ktor_version"
    //implementation "ch.qos.logback:logback:1.2.11"
    implementation 'ch.qos.logback:logback-classic:1.3.0-alpha14'

    // Hilt
    implementation 'com.google.dagger:hilt-android:2.41'
    kapt 'com.google.dagger:hilt-compiler:2.41'
    // For instrumentation tests
    androidTestImplementation  'com.google.dagger:hilt-android-testing:2.41'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.41'
    // For local unit tests
    testImplementation 'com.google.dagger:hilt-android-testing:2.41'
    kaptTest 'com.google.dagger:hilt-compiler:2.41'

    // Hilt + Compose
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    // WorkManager
    implementation 'androidx.work:work-runtime-ktx:2.8.0-alpha02'
    implementation 'androidx.work:work-multiprocess:2.8.0-alpha02'
    // Hilt + WorkManager
    implementation 'androidx.hilt:hilt-work:1.0.0'
    kapt 'androidx.hilt:hilt-compiler:1.0.0' // When using Kotlin.

    // For Realm SDK
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'
    implementation 'io.realm.kotlin:library-base:0.10.2'
}

kapt {
    correctErrorTypes true
}